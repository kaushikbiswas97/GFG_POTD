// Logic:: if a number is power of 2 then the & operation of that number and number-1 is always 0 because the number which is power 2 always has 1 set bit & if we substarct 1 from that number it will flip all the bits 
//to the right least significant 1-bit.Which makes the & opeartion of these 2 numbers as 0. so the below opeartion is work.


import java.util.*;
import java.io.*;
import java.lang.*;

class Driver_class
{
    public static void main(String args[])throws IOException
    {
        BufferedReader read = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(read.readLine());//testcases
        
        while(t-- > 0)
        {
            //input a number n
            long n = Long.parseLong(read.readLine());
            
            
            // if n is less than equal to zero then 
            //it can't be a power of 2 so we print No
            if(new Solution().isPowerofTwo(n) == true)
              System.out.println("YES");
            else System.out.println("NO");
        }
    }
}

// } Driver Code Ends


//User function Template for Java

class Solution{
    
    // Function to check if given number n is a power of two.
    public static boolean isPowerofTwo(long n){
        
        // Your code here
        if(n==0)return false;
        
        if(((n) & (n-1))==0)return true;
        else return false;
    }
    
}
